📅 30-09-2023
            📁(index.txt)
                        👉🏾 Created The Repository And Designed The Work Folder Structure For This Programming Programming_Journey


📅 30-09-2023   
            📁(06- React Functional Projects)
                        👉🏾 01) React Simple Tasks App to play With States


📅 03-10-2023 
            📁(08- Mixed Practice Projects)
                        🫱🏾 01) (React) Simple CRUD Operation


📅 04-10-2023
            📁01- JS Coding questions
                                    👉🏾 01) Check for Anagram
                                                    🧑🏾‍💻 method-1: Sorted Strings Equating
                                                    🧑🏾‍💻 method-2: Taking object

📅 05-10-2023
            📁(06- React Functional Projects)
                                    👉🏾 02) User Comment Reply App (day-01)
                                                    🖊️ The App is Post-Comment-Reply App
                                                    📝 The idea is that we are accessing users from JSON placeholder, those users will be able to make post and comment and Replies
                                                    📝 Among the users, one user will login and make a post, the post will be displayed on a common page to display all the posts of all the users and the particular user can its post by going on its profile
                                                    📝 Those Users who didn't have made the post when login will able to see the posts on the common posts page and will be able to make commnent and replies for the particular post
                                                    🧑🏾‍💻 Focuses on structuring nested datas and handling states and routes and protected routes


📅 07-10-2023 (didnt made commit)
📅 08-10-2023
            📁(06- React Functional Projects)
                                    👉🏾 02) User Comment Reply App (day-02 and day-03)
                                                    🖊️ Changed the folder structure little
                                                    🖊️ Basic Application Layout Made, with the proper protected route for different users
                                                    🖊️ There are two user types- Public and Application user
                                                    🖊️ #Public users are basically the users who arent logged
                                                    🖊️ #Application Users are basically who are logged in
                                                    🖊️ Public Users pages- Signin, Signup, Welcome 
                                                    🖊️ Application Users pages- About, Contact, Home, posts, profile
                                                    📝 There are encapsulating components, they have their respective children components
                                                    📝 In encapsulating components the logics has been set for accessing pages.
                                                        Like- the public user won't be able to access Application users pages and the Application Users wont be able to access Public users pages unless they are logged out.



📅 12-10-2023
            📁(06- React Functional Projects)
                                    👉🏾 02)  User Comment Reply App
                                                    Updated the signup form with a new idea and installed MUI for modal component and installed react-toastify 
                                                    🖊️ The new idea is that, the user will signup using email and password.
                                                    🖊️ An email with the OTP will be sent to the users email and a popup modal to confirm the email will open.
                                                    🖊️ We'll have to store the sent otp and email and password in some state, which then will be compared with the otp submit by the new user.
                                                    🖊️ If the OTP matches, the user will be redirected to some basic details form. Where the user will update basic details and on submitting the details, a new will get created. And the user will be redirected to the home page


📅 23-10-2023 (Index file updating because couldn't do it on 18-10-2023)
            📁(06- React Functional Projects)
                                    👉🏾 02)  User Comment Reply App
                                                    🖊️ signup part is validated, existing user testing done and sending and otp confirmation done
                                                    ⚠️ Found an Issue in the app, it's since i'am passing data using props in SignIn.js component, and so when i going directly from welcome page to sign-in page, then all the users is accessable and so i can match the sign-in credentials details from the list of users which i am getting in props from App.js component in SignIn component.

                                                    But the issue here will be when i'll refresh the sign-in page, then  i wont be getting the list of users in the props, it'll be undefined. So, if i'll try to find the signin in user, i wont be getting the user, because the users is defined.
                                                    To resolve this issue, there's one way, it's i'll make a callback function in App.js and when the user will click sign-in button after writing credentials, the callback function will be called and will check if the user exists in the list of all the users.
                                                    But there will few challenges- 1. Mainting the user login
                                                           2. Passing the logged in user data in different pages, becuase i dont want to use local storage for storing all the data. 
                                                           
                                                    Well i'll look into it when the issue will come. There's always some way 😄😉 

           


📅 29-10-2023
            📁(08- Mixed Practice Projects)
                                    👉🏾 02) Firebase Practice-1
                                                 🔗 My chat with chatgpt on the topic- https://chat.openai.com/share/87bc7a67-5ad2-4261-bce9-f13f70e19a95
                                                 🖊️ Created a simpel react-firebase becuase, basically connected the react app with the realtime database
                                                 📝 NOTE-1:
                                                        👉🏾 Bascially we are first we need to initialize 
                                                        👉🏾 Firebase using the initializeApp functions.
                                                         InitializeApp is a crucial step in using Firebase because it sets up the connection between your application and your specific Firebase project. It provides the necessary details and configurations for Firebase services to work within your app. Without initialization, your app would not be able to access or interact with Firebase services.
                                                        👉🏾 We are doing this in firebase.js file
                                                 
                                                 📝 NOTE-2:
                                                        👉🏾 In App.js file we are creating a instance of our database by "const db = getDatabase();"
                                                        👉🏾 there are methods like- set, get, update, remove, and onValue to get or manupulate data in out database, we'll have to pass the reference of our database as the first parameter, and we give this reference using ref method, the parameter ref takes is the instance of database
                                                                      example-
                                                                             🧑🏾‍💻 const db = getDatabase();
                                                                              
                                                                             // Example: Set data
                                                                             set(ref(db, "users/vishal"), {
                                                                             id: 1,
                                                                             username: "Vishal",
                                                                             age: "27",
                                                                             });

                                                                             // Example: Get data
                                                                             get(ref(db, "users/vishal")).then((snapshot) => {
                                                                             if (snapshot.exists()) {
                                                                             const data = snapshot.val();
                                                                             console.log(data);
                                                                             } else {
                                                                             console.log("No data available");
                                                                             }
                                                                             });

                                                                             // Example: Update data
                                                                             update(ref(db, "users/vishal"), { age: "28" });

                                                                             // Example: Remove data
                                                                             remove(ref(db, "users/vishal"));

                                                                             // Example: Listen for changes
                                                                             onValue(ref(db, "users/vishal"), (snapshot) => {
                                                                             const data = snapshot.val();
                                                                             console.log(data);
                                                                             });

